# -*- coding: utf-8 -*-
"""zipcode.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QCGbXS3e6fQK84lKl1ghm8ACQtn49KcK

# Initial Exploration - Text Track

For illustration purposes and to establish the pipeline for initial exploration, this analysis uses a dataset containing a sample of 10,000 data points.
"""

import pandas as pd

file_path = "yelp_sampled_data.csv"
df = pd.read_csv(file_path)

import kagglehub
import os
path = kagglehub.dataset_download("claygendron/us-household-income-by-zip-code-2021-2011")

csv_file = os.path.join(path, "us_income_zipcode.csv")
zip_income = pd.read_csv(csv_file)

zip_income.head()

zip_income.columns[0:100]

# extract useful colmns
zip_combine = zip_income[['Families Median Income (Dollars)', 'Families Mean Income (Dollars)', 'ZIP']]
zip_combine.head()

# make sure aip are in the same format
zip_income['ZIP'] = zip_income['ZIP'].astype(str).str.zfill(5)

zip_combine.count()

# check na
print(zip_combine.isna().sum())  # Shows count of NaN per column
missing_rows = zip_combine[zip_combine.isna().any(axis=1)]
print(missing_rows)

zip_cleaned = zip_combine.dropna()

df.columns

df['postal_code'].count()

# merge after checking type and format
df.loc[:, 'postal_code'] = df['postal_code'].astype(str).str.zfill(5)
zip_cleaned.loc[:, 'ZIP'] = zip_cleaned['ZIP'].astype(str).str.zfill(5)

merged_df = df.merge(zip_cleaned, left_on='postal_code', right_on='ZIP', how='inner')

#keep one zip column
merged_df = merged_df.drop(columns=['postal_code']).rename(columns={'ZIP': 'zip_code'})

merged_df.head()